@model ShopWeb.Models.Products.ProductEditViewModel

@{
    ViewData["Title"] = "Edit";
    var categories = Model.Categories.Select(x => new SelectListItem
            {
                Text = x.Name,
                Value = x.Id.ToString()
            });
}
@section Styles {
    <link href="~/lib/cropperjs/cropper.min.css" rel="stylesheet" />
    <style>
        .preview {
            height: 100px !important;
            width: 100px !important;
            border: 1px solid silver;
            overflow: hidden;
        }

        .image {
            width: 180px;
            display: inline-block;
            margin-right: 10px;
        }

        .hideSection {
            position: absolute;
            z-index: 2;
            display: none;
            margin-top: 120px;
            margin-left: 25px;
        }

        .image:hover .hideSection {
            display: block;
        }
    </style>
}

<h1 class="text-center">Редагування</h1>
<div class="row">
    <div class="col-md-6 offset-md-3">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <input asp-for="Id" type="hidden" class="form-control" />

            <div class="mb-3">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="CategoryId" class="control-label"></label>
                @*<input asp-for="CategoryId" class="form-control" />*@
                @Html.DropDownListFor(x=>x.CategoryId, categories, new {@class="form-select"})
                <span asp-validation-for="CategoryId" class="text-danger"></span>
            </div>
            <div class="mb-3">


                <div id="myImages">
                    @foreach (var name in Model.OldImages)
                    {
                        <div class="image">
                            <div class="hideSection">
                                <button type="button" class="btn btn-danger" data-image-delete="@name">Delete</button>
                            </div>
                            <img src="/images/@name" height="180" />
                        </div>
                    }
                </div>
                <div id="removeImages">
                </div>

                <label for="files"
                       style="border:dotted; height: 100px; cursor: pointer;">
                    Оберіть фото
                </label>
                <input type="file" id="files"
                       accept="image/jpeg,image/png,image/jpg"
                       style="display:none" />
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@await Html.PartialAsync("_ModalCropper")

@section Scripts {
    <script src="~/lib/cropperjs/cropper.min.js"></script>
    <script src="~/lib/axios/axios.min.js"></script>
    <script src="~/js/products/create.js"></script>

    <script>
        window.addEventListener("load", (event) => {
            const removeImages = document.getElementById("removeImages");
            const Delete = (e) => {
                var name = e.target.dataset.imageDelete;
                e.target.closest(".image").remove();
                var data = `<input type="hidden" name="removeImages" value="${name}" />`;
                removeImages.innerHTML += data;
            }
            const buttons = document.querySelectorAll("[data-image-delete]");
            buttons.forEach((btn) => {
                btn.addEventListener("click", Delete);
            });
        });

    </script>
}

