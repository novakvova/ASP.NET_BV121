@model ProductListViewModel


@{

    Dictionary<string, string> listParams = new Dictionary<string, string>();
    var url = Url.Action("Index", new { page=1 });
}



<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-end">
        
        <li class="page-item @(Model.Pagination.CurrentPage==1 ? "disabled" : "")">
            <a class="page-link" 
                href="@Url.Action("Index", new {page = Model.Pagination.CurrentPage-1, name = Model.Search.Name})" 
                tabindex="-1" 
                aria-disabled="true">Previous</a>
        </li>
        @for(int page=1;page<=Model.Pagination.TotalPages;page++)
        {
            if (page == 1)
            {
                <li class="page-item">
                    <a class="page-link @(Model.Pagination.CurrentPage==page ? "active" : "")"
                        href="@Url.Action("Index", new {page = page, name = Model.Search.Name})">@(page)</a>
                </li>
            }

            if(Model.Pagination.CurrentPage<=5)
            {
                if ((page!=1 && page <= 7) || page == Model.Pagination.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link @(Model.Pagination.CurrentPage==page ? "active" : "")"
                            href="@Url.Action("Index", new {page = page, name = Model.Search.Name})">@(page)</a>
                    </li>
                }

                if(page==8 && Model.Pagination.TotalPages!=page)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new {page = page, name = Model.Search.Name})">...</a>
                    </li>
                }
            }
            else if(Model.Pagination.CurrentPage>5)
            {
                int range = Model.Pagination.TotalPages - Model.Pagination.CurrentPage; //10 - 6 = 4, 10-7=3

                //Якщо зліва
                if(range<=4)
                {
                    int dot = Model.Pagination.CurrentPage - (7 - range);
                    if (page == dot)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", new {page = page, name = Model.Search.Name})">...</a>
                        </li>
                    }
                    
                    else if (Model.Pagination.CurrentPage > Model.Pagination.TotalPages - 5 && page > dot)
                    {
                        <li class="page-item">
                            <a class="page-link @(Model.Pagination.CurrentPage==page ? "active" : "")"
                                href="@Url.Action("Index", new {page = page, name = Model.Search.Name})">@(page)</a>
                        </li>
                    }
                }
                else if(range>=5)
                {
                    int dotleft = Model.Pagination.CurrentPage - 3;
                    int dotright = Model.Pagination.CurrentPage + 3;

                    if (page == dotleft || page == dotright)
                    {
                        <li class="page-item">
                            <a class="page-link" href="?page=@(page)">...</a>
                        </li>
                    }
                    if (page > dotleft && page < dotright)
                    {
                         <li class="page-item">
                            <a class="page-link @(Model.Pagination.CurrentPage==page ? "active" : "")"
                                href="@Url.Action("Index", new {page = page, name = Model.Search.Name})">@(page)</a>
                        </li>
                    }
                    if (page == Model.Pagination.TotalPages)
                    {
                        <li class="page-item">
                            <a class="page-link @(Model.Pagination.CurrentPage==page ? "active" : "")"
                                href="@Url.Action("Index", new {page = page, name = Model.Search.Name})">@(page)</a>
                        </li>
                    }
                }

            }

        }
        <li class="page-item @(Model.Pagination.CurrentPage==Model.Pagination.TotalPages ? "disabled" : "")">
            <a class="page-link" 
                href="@Url.Action("Index", new {page = Model.Pagination.CurrentPage+1, name = Model.Search.Name})" 
                tabindex="-1" aria-disabled="true">Next</a>
        </li>
    </ul>
</nav>